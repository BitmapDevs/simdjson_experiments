simdjson (dynamic mem)                  	:    3.549 cycles per input byte (best)    3.959 cycles per input byte (avg)    0.960 GB/s (error margin: 0.099 GB/s)
simdjson                                	:    3.543 cycles per input byte (best)    3.748 cycles per input byte (avg)    0.962 GB/s (error margin: 0.053 GB/s)
RapidJSON                               	:    6.876 cycles per input byte (best)    7.701 cycles per input byte (avg)    0.496 GB/s (error margin: 0.053 GB/s)
RapidJSON (insitu)                      	:    7.484 cycles per input byte (best)    7.513 cycles per input byte (avg)    0.455 GB/s (error margin: 0.002 GB/s)
sajson (dynamic mem)                    	:    6.385 cycles per input byte (best)    6.718 cycles per input byte (avg)    0.534 GB/s (error margin: 0.026 GB/s)
sajson                                  	:    5.096 cycles per input byte (best)    5.244 cycles per input byte (avg)    0.669 GB/s (error margin: 0.019 GB/s)
memcpy                                  	:    0.113 cycles per input byte (best)    0.125 cycles per input byte (avg)   29.952 GB/s (error margin: 2.830 GB/s)

 
 <doing additional analysis with performance counters (Linux only)>
simdjson : cycles   11464783 instructions   40101776 branchmisses      53416 cacheref     551592 cachemisses     164660  bytespercachemiss         56 inspercycle        3.5 insperbyte       13.4
RapidJSON: cycles   21027455 instructions   70787068 branchmisses      43848 cacheref     247440 cachemisses      28693  bytespercachemiss         68 inspercycle        3.4 insperbyte       23.7
sajson   : cycles   16501188 instructions   61551969 branchmisses      43828 cacheref     338782 cachemisses     108061  bytespercachemiss         68 inspercycle        3.7 insperbyte       20.6
