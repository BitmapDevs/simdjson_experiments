simdjson (dynamic mem)                  	:    2.315 cycles per input byte (best)    2.497 cycles per input byte (avg)    1.472 GB/s (error margin: 0.107 GB/s)
simdjson                                	:    2.316 cycles per input byte (best)    2.404 cycles per input byte (avg)    1.471 GB/s (error margin: 0.054 GB/s)
RapidJSON                               	:    4.698 cycles per input byte (best)    5.065 cycles per input byte (avg)    0.725 GB/s (error margin: 0.053 GB/s)
RapidJSON (insitu)                      	:    5.433 cycles per input byte (best)    5.486 cycles per input byte (avg)    0.627 GB/s (error margin: 0.006 GB/s)
sajson (dynamic mem)                    	:    4.060 cycles per input byte (best)    4.251 cycles per input byte (avg)    0.839 GB/s (error margin: 0.038 GB/s)
sajson                                  	:    3.630 cycles per input byte (best)    3.699 cycles per input byte (avg)    0.939 GB/s (error margin: 0.017 GB/s)
memcpy                                  	:    0.107 cycles per input byte (best)    0.109 cycles per input byte (avg)   31.699 GB/s (error margin: 0.656 GB/s)

 
 <doing additional analysis with performance counters (Linux only)>
simdjson : cycles    3959192 instructions   14218205 branchmisses      13280 cacheref     183898 cachemisses       7497  bytespercachemiss        119 inspercycle        3.6 insperbyte        9.0
RapidJSON: cycles    8568024 instructions   26883679 branchmisses      18133 cacheref     111649 cachemisses       2709  bytespercachemiss         87 inspercycle        3.1 insperbyte       17.0
sajson   : cycles    6238832 instructions   23439788 branchmisses      15872 cacheref     117943 cachemisses       6788  bytespercachemiss         99 inspercycle        3.8 insperbyte       14.9
